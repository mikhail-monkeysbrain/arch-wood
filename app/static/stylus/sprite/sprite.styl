/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$s_arrow_bottom_name = 's-arrow-bottom';
$s_arrow_bottom_x = 78px;
$s_arrow_bottom_y = 0px;
$s_arrow_bottom_offset_x = -78px;
$s_arrow_bottom_offset_y = 0px;
$s_arrow_bottom_width = 12px;
$s_arrow_bottom_height = 32px;
$s_arrow_bottom_total_width = 102px;
$s_arrow_bottom_total_height = 64px;
$s_arrow_bottom_image = 'sprite.png';
$s_arrow_bottom = 78px 0px -78px 0px 12px 32px 102px 64px 'sprite.png' 's-arrow-bottom';
$s_arrow_left_name = 's-arrow-left';
$s_arrow_left_x = 0px;
$s_arrow_left_y = 52px;
$s_arrow_left_offset_x = 0px;
$s_arrow_left_offset_y = -52px;
$s_arrow_left_width = 32px;
$s_arrow_left_height = 12px;
$s_arrow_left_total_width = 102px;
$s_arrow_left_total_height = 64px;
$s_arrow_left_image = 'sprite.png';
$s_arrow_left = 0px 52px 0px -52px 32px 12px 102px 64px 'sprite.png' 's-arrow-left';
$s_arrow_right_name = 's-arrow-right';
$s_arrow_right_x = 32px;
$s_arrow_right_y = 52px;
$s_arrow_right_offset_x = -32px;
$s_arrow_right_offset_y = -52px;
$s_arrow_right_width = 32px;
$s_arrow_right_height = 12px;
$s_arrow_right_total_width = 102px;
$s_arrow_right_total_height = 64px;
$s_arrow_right_image = 'sprite.png';
$s_arrow_right = 32px 52px -32px -52px 32px 12px 102px 64px 'sprite.png' 's-arrow-right';
$s_arrow_up_name = 's-arrow-up';
$s_arrow_up_x = 90px;
$s_arrow_up_y = 0px;
$s_arrow_up_offset_x = -90px;
$s_arrow_up_offset_y = 0px;
$s_arrow_up_width = 12px;
$s_arrow_up_height = 32px;
$s_arrow_up_total_width = 102px;
$s_arrow_up_total_height = 64px;
$s_arrow_up_image = 'sprite.png';
$s_arrow_up = 90px 0px -90px 0px 12px 32px 102px 64px 'sprite.png' 's-arrow-up';
$s_siart_name = 's-siart';
$s_siart_x = 0px;
$s_siart_y = 0px;
$s_siart_offset_x = 0px;
$s_siart_offset_y = 0px;
$s_siart_width = 78px;
$s_siart_height = 52px;
$s_siart_total_width = 102px;
$s_siart_total_height = 64px;
$s_siart_image = 'sprite.png';
$s_siart = 0px 0px 0px 0px 78px 52px 102px 64px 'sprite.png' 's-siart';
$spritesheet_width = 102px;
$spritesheet_height = 64px;
$spritesheet_image = 'sprite.png';
$spritesheet_sprites = $s_arrow_bottom $s_arrow_left $s_arrow_right $s_arrow_up $s_siart;
$spritesheet = 102px 64px 'sprite.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
